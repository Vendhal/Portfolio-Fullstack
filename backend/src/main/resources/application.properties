# Database Configuration - PostgreSQL (Docker)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:postgres}?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:Sunnysandy@1}
spring.datasource.driver-class-name=org.postgresql.Driver

# Logging Configuration - Force our debug messages to show
logging.level.com.example.portfolio=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.springframework.context=DEBUG
logging.level.root=INFO

# Enable Spring Boot debug mode and auto-configuration reporting
debug=true
logging.level.org.springframework.boot=DEBUG
logging.level.org.springframework.beans.factory=DEBUG

# Timezone Configuration
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# Temporary: Disable Flyway validation to bypass checksum issues
spring.flyway.validate-on-migrate=false

server.port=8080

# CORS Configuration - specify allowed origins for security
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}

spring.jpa.open-in-view=false

# JWT Configuration - MUST be set via environment variables in production
app.jwt.secret=${JWT_SECRET:dev-secret-change-me-1234567890123456}
app.jwt.expiration=${JWT_EXPIRATION:3600000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Actuator Configuration - Health checks and monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
management.health.refresh-token.enabled=true
management.info.env.enabled=true

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=users,userDetails,jwtBlacklist
logging.level.org.springframework.cache=DEBUG

# Security for Actuator endpoints
management.security.enabled=true

# Metrics configuration
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=portfolio-backend

# Application Information for /actuator/info endpoint
info.app.name=Portfolio Backend API
info.app.description=RESTful API for portfolio management with authentication and refresh tokens
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Features Information
info.features.authentication=JWT with refresh tokens
info.features.database=PostgreSQL with Flyway migrations  
info.features.security=Rate limiting, CORS, HTTPS enforcement
info.features.api-versioning=URL-based versioning (/api/v1/)
info.features.monitoring=Spring Boot Actuator with security

# API Endpoints Information  
info.endpoints.auth=/api/v1/auth/**
info.endpoints.profiles=/api/v1/profiles/**
info.endpoints.contact=/api/v1/contact
info.endpoints.health=/actuator/health
info.endpoints.metrics=/actuator/metrics
info.endpoints.info=/actuator/info
