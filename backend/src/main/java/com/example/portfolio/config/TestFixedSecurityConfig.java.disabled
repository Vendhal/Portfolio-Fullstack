package com.example.portfolio.config;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.annotation.Order;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
@Order(1)
public class TestFixedSecurityConfig {
    private static final Logger logger = LoggerFactory.getLogger(TestFixedSecurityConfig.class);

    public TestFixedSecurityConfig() {
        logger.error("====== TEST FIXED SECURITY CONFIG CONSTRUCTOR CALLED ======");
        System.out.println("====== TEST FIXED SECURITY CONFIG CONSTRUCTOR CALLED (SYSOUT) ======");
        System.err.println("====== TEST FIXED SECURITY CONFIG CONSTRUCTOR CALLED (SYSERR) ======");
    }

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        logger.error("====== TEST FIXED SECURITY CONFIG LOADING ======");
        System.out.println("====== TEST FIXED SECURITY CONFIG LOADING (SYSOUT) ======");
        System.err.println("====== TEST FIXED SECURITY CONFIG LOADING (SYSERR) ======");
        
        http
            .csrf(csrf -> csrf.disable())
            .sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
            .authorizeHttpRequests(authz -> authz
                // Permit all authentication endpoints
                .requestMatchers(HttpMethod.POST, "/api/v1/auth/**").permitAll()
                .requestMatchers(HttpMethod.GET, "/api/v1/debug/**").permitAll()
                .requestMatchers(HttpMethod.GET, "/actuator/**").permitAll()
                // Permit public endpoints
                .requestMatchers(HttpMethod.GET, "/api/v1/team/**", "/api/team/**").permitAll()
                .requestMatchers(HttpMethod.GET, "/api/v1/projects/**", "/api/projects/**").permitAll()
                .requestMatchers(HttpMethod.POST, "/api/v1/contact").permitAll()
                // Require authentication for profile endpoints
                .requestMatchers("/api/v1/profile/**").authenticated()
                // All other requests need authentication
                .anyRequest().authenticated()
            );
            
        logger.error("====== TEST FIXED SECURITY CONFIG COMPLETE ======");
        System.out.println("====== TEST FIXED SECURITY CONFIG COMPLETE (SYSOUT) ======");
        System.err.println("====== TEST FIXED SECURITY CONFIG COMPLETE (SYSERR) ======");
        return http.build();
    }
}